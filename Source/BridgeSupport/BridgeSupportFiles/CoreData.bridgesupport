<?xml version='1.0'?>
<!DOCTYPE signatures SYSTEM "file://localhost/System/Library/DTDs/BridgeSupport.dtd">
<signatures version='1.0'>
<depends_on path='/System/Library/Frameworks/Foundation.framework'/>
<depends_on path='/System/Library/Frameworks/CoreFoundation.framework'/>
<constant name='NSAddedPersistentStoresKey' type='@'/>
<constant name='NSAffectedObjectsErrorKey' type='@'/>
<constant name='NSAffectedStoresErrorKey' type='@'/>
<constant name='NSBinaryExternalRecordType' type='@'/>
<constant name='NSBinaryStoreType' type='@'/>
<constant name='NSCoreDataVersionNumber' type='d'/>
<constant name='NSDeletedObjectsKey' type='@'/>
<constant name='NSDetailedErrorsKey' type='@'/>
<constant name='NSEntityNameInPathKey' type='@'/>
<constant name='NSErrorMergePolicy' type='@'/>
<constant name='NSExternalRecordExtensionOption' type='@'/>
<constant name='NSExternalRecordsDirectoryOption' type='@'/>
<constant name='NSExternalRecordsFileFormatOption' type='@'/>
<constant name='NSIgnorePersistentStoreVersioningOption' type='@'/>
<constant name='NSInMemoryStoreType' type='@'/>
<constant name='NSInferMappingModelAutomaticallyOption' type='@'/>
<constant name='NSInsertedObjectsKey' type='@'/>
<constant name='NSInvalidatedAllObjectsKey' type='@'/>
<constant name='NSInvalidatedObjectsKey' type='@'/>
<constant name='NSManagedObjectContextDidSaveNotification' type='@'/>
<constant name='NSManagedObjectContextObjectsDidChangeNotification' type='@'/>
<constant name='NSManagedObjectContextWillSaveNotification' type='@'/>
<constant name='NSMergeByPropertyObjectTrumpMergePolicy' type='@'/>
<constant name='NSMergeByPropertyStoreTrumpMergePolicy' type='@'/>
<constant name='NSMigratePersistentStoresAutomaticallyOption' type='@'/>
<constant name='NSMigrationDestinationObjectKey' type='@'/>
<constant name='NSMigrationEntityMappingKey' type='@'/>
<constant name='NSMigrationEntityPolicyKey' type='@'/>
<constant name='NSMigrationManagerKey' type='@'/>
<constant name='NSMigrationPropertyMappingKey' type='@'/>
<constant name='NSMigrationSourceObjectKey' type='@'/>
<constant name='NSModelPathKey' type='@'/>
<constant name='NSObjectURIKey' type='@'/>
<constant name='NSOverwriteMergePolicy' type='@'/>
<constant name='NSPersistentStoreCoordinatorStoresDidChangeNotification' type='@'/>
<constant name='NSPersistentStoreCoordinatorWillRemoveStoreNotification' type='@'/>
<constant name='NSPersistentStoreDidImportUbiquitousContentChangesNotification' type='@'/>
<constant name='NSPersistentStoreOSCompatibility' type='@'/>
<constant name='NSPersistentStoreSaveConflictsErrorKey' type='@'/>
<constant name='NSPersistentStoreTimeoutOption' type='@'/>
<constant name='NSPersistentStoreUbiquitousContentNameKey' type='@'/>
<constant name='NSPersistentStoreUbiquitousContentURLKey' type='@'/>
<constant name='NSReadOnlyPersistentStoreOption' type='@'/>
<constant name='NSRefreshedObjectsKey' type='@'/>
<constant name='NSRemovedPersistentStoresKey' type='@'/>
<constant name='NSRollbackMergePolicy' type='@'/>
<constant name='NSSQLiteAnalyzeOption' type='@'/>
<constant name='NSSQLiteErrorDomain' type='@'/>
<constant name='NSSQLiteManualVacuumOption' type='@'/>
<constant name='NSSQLitePragmasOption' type='@'/>
<constant name='NSSQLiteStoreType' type='@'/>
<constant name='NSStoreModelVersionHashesKey' type='@'/>
<constant name='NSStoreModelVersionIdentifiersKey' type='@'/>
<constant name='NSStorePathKey' type='@'/>
<constant name='NSStoreTypeKey' type='@'/>
<constant name='NSStoreUUIDInPathKey' type='@'/>
<constant name='NSStoreUUIDKey' type='@'/>
<constant name='NSUUIDChangedPersistentStoresKey' type='@'/>
<constant name='NSUpdatedObjectsKey' type='@'/>
<constant name='NSValidateXMLStoreOption' type='@'/>
<constant name='NSValidationKeyErrorKey' type='@'/>
<constant name='NSValidationObjectErrorKey' type='@'/>
<constant name='NSValidationPredicateErrorKey' type='@'/>
<constant name='NSValidationValueErrorKey' type='@'/>
<constant name='NSXMLExternalRecordType' type='@'/>
<constant name='NSXMLStoreType' type='@'/>
<enum name='NSAddEntityMappingType' value='2'/>
<enum name='NSBinaryDataAttributeType' value='1000'/>
<enum name='NSBooleanAttributeType' value='800'/>
<enum name='NSCascadeDeleteRule' value='2'/>
<enum name='NSConfinementConcurrencyType' value='0'/>
<enum name='NSCopyEntityMappingType' value='4'/>
<enum name='NSCoreDataError' value='134060'/>
<enum name='NSCoreDataVersionNumber10_4' value='46.0'/>
<enum name='NSCoreDataVersionNumber10_4_3' value='77.0'/>
<enum name='NSCoreDataVersionNumber10_5' value='185.0'/>
<enum name='NSCoreDataVersionNumber10_5_3' value='186.0'/>
<enum name='NSCoreDataVersionNumber10_6' value='246.0'/>
<enum name='NSCoreDataVersionNumber10_6_2' value='250.0'/>
<enum name='NSCoreDataVersionNumber10_6_3' value='251.0'/>
<enum name='NSCoreDataVersionNumber_iPhoneOS_3_0' value='241.0'/>
<enum name='NSCoreDataVersionNumber_iPhoneOS_3_1' value='248.0'/>
<enum name='NSCoreDataVersionNumber_iPhoneOS_3_2' value='310.2'/>
<enum name='NSCoreDataVersionNumber_iPhoneOS_4_0' value='320.5'/>
<enum name='NSCoreDataVersionNumber_iPhoneOS_4_1' value='320.11'/>
<enum name='NSCoreDataVersionNumber_iPhoneOS_4_2' value='320.15'/>
<enum name='NSCoreDataVersionNumber_iPhoneOS_4_3' value='320.17'/>
<enum name='NSCountResultType' value='4'/>
<enum name='NSCustomEntityMappingType' value='1'/>
<enum name='NSDateAttributeType' value='900'/>
<enum name='NSDecimalAttributeType' value='400'/>
<enum name='NSDenyDeleteRule' value='3'/>
<enum name='NSDictionaryResultType' value='2'/>
<enum name='NSDoubleAttributeType' value='500'/>
<enum name='NSEntityMigrationPolicyError' value='134170'/>
<enum name='NSErrorMergePolicyType' value='0'/>
<enum name='NSExternalRecordImportError' value='134200'/>
<enum name='NSFetchRequestExpressionType' value='50'/>
<enum name='NSFetchRequestType' value='1'/>
<enum name='NSFloatAttributeType' value='600'/>
<enum name='NSInferredMappingModelError' value='134190'/>
<enum name='NSInteger16AttributeType' value='100'/>
<enum name='NSInteger32AttributeType' value='200'/>
<enum name='NSInteger64AttributeType' value='300'/>
<enum name='NSMainQueueConcurrencyType' value='2'/>
<enum name='NSManagedObjectContextLockingError' value='132000'/>
<enum name='NSManagedObjectExternalRelationshipError' value='133010'/>
<enum name='NSManagedObjectIDResultType' value='1'/>
<enum name='NSManagedObjectMergeError' value='133020'/>
<enum name='NSManagedObjectReferentialIntegrityError' value='133000'/>
<enum name='NSManagedObjectResultType' value='0'/>
<enum name='NSManagedObjectValidationError' value='1550'/>
<enum name='NSMergeByPropertyObjectTrumpMergePolicyType' value='2'/>
<enum name='NSMergeByPropertyStoreTrumpMergePolicyType' value='1'/>
<enum name='NSMigrationCancelledError' value='134120'/>
<enum name='NSMigrationError' value='134110'/>
<enum name='NSMigrationManagerDestinationStoreError' value='134160'/>
<enum name='NSMigrationManagerSourceStoreError' value='134150'/>
<enum name='NSMigrationMissingMappingModelError' value='134140'/>
<enum name='NSMigrationMissingSourceModelError' value='134130'/>
<enum name='NSNoActionDeleteRule' value='0'/>
<enum name='NSNullifyDeleteRule' value='1'/>
<enum name='NSObjectIDAttributeType' value='2000'/>
<enum name='NSOverwriteMergePolicyType' value='3'/>
<enum name='NSPersistentStoreCoordinatorLockingError' value='132010'/>
<enum name='NSPersistentStoreIncompatibleSchemaError' value='134020'/>
<enum name='NSPersistentStoreIncompatibleVersionHashError' value='134100'/>
<enum name='NSPersistentStoreIncompleteSaveError' value='134040'/>
<enum name='NSPersistentStoreInvalidTypeError' value='134000'/>
<enum name='NSPersistentStoreOpenError' value='134080'/>
<enum name='NSPersistentStoreOperationError' value='134070'/>
<enum name='NSPersistentStoreSaveConflictsError' value='134050'/>
<enum name='NSPersistentStoreSaveError' value='134030'/>
<enum name='NSPersistentStoreTimeoutError' value='134090'/>
<enum name='NSPersistentStoreTypeMismatchError' value='134010'/>
<enum name='NSPersistentStoreUnsupportedRequestTypeError' value='134091'/>
<enum name='NSPrivateQueueConcurrencyType' value='1'/>
<enum name='NSRemoveEntityMappingType' value='3'/>
<enum name='NSRollbackMergePolicyType' value='4'/>
<enum name='NSSQLiteError' value='134180'/>
<enum name='NSSaveRequestType' value='2'/>
<enum name='NSSnapshotEventMergePolicy' value='64'/>
<enum name='NSSnapshotEventRefresh' value='32'/>
<enum name='NSSnapshotEventRollback' value='16'/>
<enum name='NSSnapshotEventUndoDeletion' value='4'/>
<enum name='NSSnapshotEventUndoInsertion' value='2'/>
<enum name='NSSnapshotEventUndoUpdate' value='8'/>
<enum name='NSStringAttributeType' value='700'/>
<enum name='NSTransformEntityMappingType' value='5'/>
<enum name='NSTransformableAttributeType' value='1800'/>
<enum name='NSUndefinedAttributeType' value='0'/>
<enum name='NSUndefinedEntityMappingType' value='0'/>
<enum name='NSValidationDateTooLateError' value='1630'/>
<enum name='NSValidationDateTooSoonError' value='1640'/>
<enum name='NSValidationInvalidDateError' value='1650'/>
<enum name='NSValidationMissingMandatoryPropertyError' value='1570'/>
<enum name='NSValidationMultipleErrorsError' value='1560'/>
<enum name='NSValidationNumberTooLargeError' value='1610'/>
<enum name='NSValidationNumberTooSmallError' value='1620'/>
<enum name='NSValidationRelationshipDeniedDeleteError' value='1600'/>
<enum name='NSValidationRelationshipExceedsMaximumCountError' value='1590'/>
<enum name='NSValidationRelationshipLacksMinimumCountError' value='1580'/>
<enum name='NSValidationStringPatternMatchingError' value='1680'/>
<enum name='NSValidationStringTooLongError' value='1660'/>
<enum name='NSValidationStringTooShortError' value='1670'/>
<class name='NSAtomicStore'>
<method selector='load:'>
<retval type='B'/>
</method>
<method selector='save:'>
<retval type='B'/>
</method>
</class>
<class name='NSAttributeDescription'>
<method selector='allowsExternalBinaryDataStorage'>
<retval type='B'/>
</method>
<method selector='setAllowsExternalBinaryDataStorage:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSEntityDescription'>
<method selector='isAbstract'>
<retval type='B'/>
</method>
<method selector='isKindOfEntity:'>
<retval type='B'/>
</method>
<method selector='setAbstract:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSEntityMigrationPolicy'>
<method selector='beginEntityMapping:manager:error:'>
<retval type='B'/>
</method>
<method selector='createDestinationInstancesForSourceInstance:entityMapping:manager:error:'>
<retval type='B'/>
</method>
<method selector='createRelationshipsForDestinationInstance:entityMapping:manager:error:'>
<retval type='B'/>
</method>
<method selector='endEntityMapping:manager:error:'>
<retval type='B'/>
</method>
<method selector='endInstanceCreationForEntityMapping:manager:error:'>
<retval type='B'/>
</method>
<method selector='endRelationshipCreationForEntityMapping:manager:error:'>
<retval type='B'/>
</method>
<method selector='performCustomValidationForEntityMapping:manager:error:'>
<retval type='B'/>
</method>
</class>
<class name='NSFetchRequest'>
<method selector='includesPendingChanges'>
<retval type='B'/>
</method>
<method selector='includesPropertyValues'>
<retval type='B'/>
</method>
<method selector='includesSubentities'>
<retval type='B'/>
</method>
<method selector='returnsDistinctResults'>
<retval type='B'/>
</method>
<method selector='returnsObjectsAsFaults'>
<retval type='B'/>
</method>
<method selector='setIncludesPendingChanges:'>
<arg type='B' index='0'/>
</method>
<method selector='setIncludesPropertyValues:'>
<arg type='B' index='0'/>
</method>
<method selector='setIncludesSubentities:'>
<arg type='B' index='0'/>
</method>
<method selector='setReturnsDistinctResults:'>
<arg type='B' index='0'/>
</method>
<method selector='setReturnsObjectsAsFaults:'>
<arg type='B' index='0'/>
</method>
<method selector='setShouldRefreshRefetchedObjects:'>
<arg type='B' index='0'/>
</method>
<method selector='shouldRefreshRefetchedObjects'>
<retval type='B'/>
</method>
</class>
<class name='NSFetchRequestExpression'>
<method class_method='true' selector='expressionForFetch:context:countOnly:'>
<arg type='B' index='2'/>
</method>
<method selector='isCountOnlyRequest'>
<retval type='B'/>
</method>
</class>
<class name='NSIncrementalStore'>
<method selector='loadMetadata:'>
<retval type='B'/>
</method>
</class>
<class name='NSManagedObject'>
<method class_method='true' selector='contextShouldIgnoreUnmodeledPropertyChanges'>
<retval type='B'/>
</method>
<method selector='hasChanges'>
<retval type='B'/>
</method>
<method selector='hasFaultForRelationshipNamed:'>
<retval type='B'/>
</method>
<method selector='isDeleted'>
<retval type='B'/>
</method>
<method selector='isFault'>
<retval type='B'/>
</method>
<method selector='isInserted'>
<retval type='B'/>
</method>
<method selector='isUpdated'>
<retval type='B'/>
</method>
<method selector='validateForDelete:'>
<retval type='B'/>
</method>
<method selector='validateForInsert:'>
<retval type='B'/>
</method>
<method selector='validateForUpdate:'>
<retval type='B'/>
</method>
<method selector='validateValue:forKey:error:'>
<retval type='B'/>
</method>
</class>
<class name='NSManagedObjectContext'>
<method selector='hasChanges'>
<retval type='B'/>
</method>
<method selector='obtainPermanentIDsForObjects:error:'>
<retval type='B'/>
</method>
<method selector='performBlock:'>
<arg type='@?' index='0' function_pointer='true'>
<retval type='v'/>
</arg>
</method>
<method selector='performBlockAndWait:'>
<arg type='@?' index='0' function_pointer='true'>
<retval type='v'/>
</arg>
</method>
<method selector='propagatesDeletesAtEndOfEvent'>
<retval type='B'/>
</method>
<method selector='refreshObject:mergeChanges:'>
<arg type='B' index='1'/>
</method>
<method selector='retainsRegisteredObjects'>
<retval type='B'/>
</method>
<method selector='save:'>
<retval type='B'/>
</method>
<method selector='setPropagatesDeletesAtEndOfEvent:'>
<arg type='B' index='0'/>
</method>
<method selector='setRetainsRegisteredObjects:'>
<arg type='B' index='0'/>
</method>
<method selector='tryLock'>
<retval type='B'/>
</method>
</class>
<class name='NSManagedObjectID'>
<method selector='isTemporaryID'>
<retval type='B'/>
</method>
</class>
<class name='NSManagedObjectModel'>
<method selector='isConfiguration:compatibleWithStoreMetadata:'>
<retval type='B'/>
</method>
</class>
<class name='NSMergePolicy'>
<method selector='resolveConflicts:error:'>
<retval type='B'/>
</method>
</class>
<class name='NSMigrationManager'>
<method selector='migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:'>
<retval type='B'/>
</method>
<method selector='setUsesStoreSpecificMigrationManager:'>
<arg type='B' index='0'/>
</method>
<method selector='usesStoreSpecificMigrationManager'>
<retval type='B'/>
</method>
</class>
<class name='NSPersistentStore'>
<method selector='isReadOnly'>
<retval type='B'/>
</method>
<method selector='loadMetadata:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setMetadata:forPersistentStoreWithURL:error:'>
<retval type='B'/>
</method>
<method selector='setReadOnly:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSPersistentStoreCoordinator'>
<method selector='removePersistentStore:error:'>
<retval type='B'/>
</method>
<method class_method='true' selector='setMetadata:forPersistentStoreOfType:URL:error:'>
<retval type='B'/>
</method>
<method selector='setURL:forPersistentStore:'>
<retval type='B'/>
</method>
<method selector='tryLock'>
<retval type='B'/>
</method>
</class>
<class name='NSPropertyDescription'>
<method selector='isIndexed'>
<retval type='B'/>
</method>
<method selector='isIndexedBySpotlight'>
<retval type='B'/>
</method>
<method selector='isOptional'>
<retval type='B'/>
</method>
<method selector='isStoredInExternalRecord'>
<retval type='B'/>
</method>
<method selector='isTransient'>
<retval type='B'/>
</method>
<method selector='setIndexed:'>
<arg type='B' index='0'/>
</method>
<method selector='setIndexedBySpotlight:'>
<arg type='B' index='0'/>
</method>
<method selector='setOptional:'>
<arg type='B' index='0'/>
</method>
<method selector='setStoredInExternalRecord:'>
<arg type='B' index='0'/>
</method>
<method selector='setTransient:'>
<arg type='B' index='0'/>
</method>
</class>
<class name='NSRelationshipDescription'>
<method selector='isOrdered'>
<retval type='B'/>
</method>
<method selector='isToMany'>
<retval type='B'/>
</method>
<method selector='setOrdered:'>
<arg type='B' index='0'/>
</method>
</class>
</signatures>
